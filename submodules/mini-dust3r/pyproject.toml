[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mini-dust3r"
version = "0.1.1"
description = "Miniature version of dust3r, focused on inference"
requires-python = ">=3.8.0"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
]

dependencies=[
    "torch>=2.0.1,<2.3",
    "torchvision>=0.15.2,<0.18",
    "matplotlib>=3.8.4",
    "einops>=0.7.0",
    "tqdm>=4.66.4",
    "scipy>=1.12.0",
    "trimesh>=4.2.0",
    "tensorboard>=2.16.2",
    "pyglet>=1.5.27",
    "jaxtyping>=0.2.28",
    "gradio>=4.29.0",
    "rerun-sdk>=0.15.1",
    # not in conda dependencies
    "roma>=1.5",
    "opencv-python>=4.9.0.80",
    "gradio-rerun>=0.0.1",
    "open3d>=0.18.0",
    "safetensors>=0.4.3",
    "numpy<2.0.0",
    "hf-transfer>=0.1.6",
]

[tool.setuptools.packages.find]
include = ["mini_dust3r*"]

[tool.pixi.project]
name = "mini-dust3r"
authors = ["pablovela5620 <pablovela5620@gmail.com>"]
channels = ["nvidia/label/cuda-11.8.0", "nvidia", "conda-forge", "pytorch"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[tool.pixi.system-requirements]
libc = { family="glibc", version="2.31" }

[tool.pixi.tasks]
_build-croco = { cmd = "python setup.py build_ext --inplace", cwd = "mini_dust3r/croco/curope/", outputs=["lib.linux-x86_64-cpython-311/curope.cpython-311-x86_64-linux-gnu.so"]}
_download-checkpoint = {cmd = "ls checkpoints/DUSt3R_ViTLarge_BaseDecoder_512_dpt.pth || wget -P checkpoints/ https://download.europe.naverlabs.com/ComputerVision/DUSt3R/DUSt3R_ViTLarge_BaseDecoder_512_dpt.pth", outputs=["checkpoints/DUSt3R_ViTLarge_BaseDecoder_512_dpt.pth"]}
_post-install = { cmd = "pwd", depends_on = ["download-checkpoint", "build-croco"]}
_dev-install = "python -m pip install build twine"

[tool.pixi.tasks.build-wheel]
cmd = "python -m build"
depends_on = ["_dev-install"]
description = "Build python wheels"

[tool.pixi.tasks.rerun-demo]
cmd = "PYTORCH_ENABLE_MPS_FALLBACK=1 python tools/rerun_demo.py"
description = "runs demo using rerun visualizer"

[tool.pixi.tasks.gradio-demo]
cmd = "python tools/app.py"
description = "run gradio frontend for mini-dust3r"

[tool.pixi.dependencies]
python = "3.11.*"
pip = ">=23.3.2,<23.4"
pytorch = {version = ">=2.2.0,<2.3", channel="pytorch"}
torchvision = {version = ">=0.17.0,<0.18", channel="pytorch"}
matplotlib = ">=3.8.3,<3.9"
einops = ">=0.7.0,<0.8"
tqdm = ">=4.66.2,<4.67"
scipy = ">=1.12.0,<1.13"
trimesh = ">=4.2.0,<4.3"
tensorboard = ">=2.16.2,<2.17"
pyglet = ">=1.5.27,<1.6"
jaxtyping = ">=0.2.28,<0.3"
gradio = ">=4.29.0,<4.30"
rerun-sdk = ">=0.15.1,<0.16"

[tool.pixi.pypi-dependencies]
mini-dust3r = { path = ".", editable = true}

[tool.pixi.target.linux-64.dependencies]
cuda = {version = "*", channel="nvidia/label/cuda-11.8.0"}
pytorch-cuda = {version = "11.8.*", channel="pytorch"}